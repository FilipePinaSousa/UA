.data
src: .asciiz "Hello, world!"  # source string
dst: .space 20               # espaço alocado para guardar a string

.text
main:
	la $a0, src   # Load the address of the source string into $a0
	la $a1, dst   # Load the address of the destination string into $a1
	jal strcopy
	
	la $a0, dst   # Load the address of the destination string into $a0
	li $v0, 4     # Set system call code 4 for printing string
	syscall
	
	li $v0, 10    # Set system call code 10 for program exit
	syscall
	
strcopy:
	subiu $sp, $sp, 8
	sw $ra, 0($sp)
	sw $s0, 4($sp)
	move $s0, $a1  # Move the address of the destination string to $s0
	
strcopy_loop:
	lb $t0, 0($a0)      # Load byte from source address ($a0)
	beqz $t0, strcopy_end  # Branch if the byte is '\0'
	sb $t0, 0($s0)      # Store byte to destination address ($s0)
	addiu $a0, $a0, 1   # Increment source address
	addiu $s0, $s0, 1   # Increment destination address
	j strcopy_loop
	
strcopy_end:
	sb $zero, 0($s0)    # Null-terminate the destination string
	lw $ra, 0($sp)
	lw $s0, 4($sp)
	addiu $sp, $sp, 8
	jr $ra
	
	
strcat:
	subiu $sp, $sp, 8
	sw $ra, 0($sp)
	sw $s0, 4($sp)
	move $s0, $a0
	
strcat_wh:
	lb $t0, 0($s0)         # Load byte from address stored in $s0
	beqz $t0, strcat_ew    # Branch if the byte is '\0'
	addiu $s0, $s0, 1      # Increment address to point to the next byte
	j strcat_wh
	
strcat_ew:
	move $v0, $s0           # Move the updated address to $v0
	lw $ra, 0($sp)
	lw $s0, 4($sp)
	addiu $sp, $sp, 8
	jr $ra
